[{"path":"index.html","id":"intro","chapter":"1 Introduction","heading":"1 Introduction","text":"","code":""},{"path":"notation.html","id":"notation","chapter":"2 Notation conventions","heading":"2 Notation conventions","text":"appendix uses following notation conventions, generally follows guidance Edwards Auger-Méthé (2019):Greek symbols parameters,Greek symbols parameters,Latin/Roman alphabet data (except \\(\\boldsymbol{Q}\\) \\(\\boldsymbol{H}\\), used convention),Latin/Roman alphabet data (except \\(\\boldsymbol{Q}\\) \\(\\boldsymbol{H}\\), used convention),bold symbols vectors matrices (e.g., \\(\\boldsymbol{\\omega}\\) vector \\(\\omega_{\\boldsymbol{s}}\\) value \\(\\boldsymbol{\\omega}\\) point space \\(\\boldsymbol{s}\\)),bold symbols vectors matrices (e.g., \\(\\boldsymbol{\\omega}\\) vector \\(\\omega_{\\boldsymbol{s}}\\) value \\(\\boldsymbol{\\omega}\\) point space \\(\\boldsymbol{s}\\)),\\(\\phi\\) distribution dispersion parameters consistency code,\\(\\phi\\) distribution dispersion parameters consistency code,\\(\\mathbb{E}[y]\\) define expected value (mean) variable \\(y\\),\\(\\mathbb{E}[y]\\) define expected value (mean) variable \\(y\\),\\(\\mathrm{Var}[y]\\) define expected variance variable \\(y\\),\\(\\mathrm{Var}[y]\\) define expected variance variable \\(y\\),\\(^*\\) superscript represents interpolated projected values opposed values knot locations (e.g., \\(\\boldsymbol{\\omega}\\) vs. \\(\\boldsymbol{\\omega}^*\\)), anda \\(^*\\) superscript represents interpolated projected values opposed values knot locations (e.g., \\(\\boldsymbol{\\omega}\\) vs. \\(\\boldsymbol{\\omega}^*\\)), andwhere possible, notation chosen match VAST (Thorson 2019) maintain consistency (e.g., \\(\\boldsymbol{\\omega}\\) spatial fields \\(\\boldsymbol{\\epsilon}_t\\) spatiotemporal fields).possible, notation chosen match VAST (Thorson 2019) maintain consistency (e.g., \\(\\boldsymbol{\\omega}\\) spatial fields \\(\\boldsymbol{\\epsilon}_t\\) spatiotemporal fields).include tables major indices (Table 1) symbols (Table 2).Table 2.1: Subscript notationTable 2.2: Symbol notation, code representation (model output model template code), descriptions.","code":""},{"path":"sdmtmb-model-structure.html","id":"sdmtmb-model-structure","chapter":"3 sdmTMB model structure","heading":"3 sdmTMB model structure","text":"complete sdmTMB model can written \\[\n\\begin{aligned}\n\\mathbb{E}[y_{\\boldsymbol{s},t}] &= \\mu_{\\boldsymbol{s},t},\\\\\n\\mu_{\\boldsymbol{s},t} &=\nf^{-1} \\left( \\boldsymbol{X}^{\\mathrm{main}}_{\\boldsymbol{s},t} \\boldsymbol{\\beta} +\nO_{\\boldsymbol{s},t} +\n\\alpha_g +\n\\boldsymbol{X}^{\\mathrm{tvc}}_{\\boldsymbol{s},t} \\boldsymbol{\\gamma_t} +\n\\boldsymbol{X}^{\\mathrm{svc}}_{\\boldsymbol{s},t} \\zeta_{\\boldsymbol{s}} +\n\\omega_{\\boldsymbol{s}} +\n\\epsilon_{\\boldsymbol{s},t} \\right),\n\\end{aligned}\n\\]\\(y_{\\boldsymbol{s},t}\\) represents response data point \\(\\boldsymbol{\\boldsymbol{s}}\\) time \\(t\\);\\(\\mu\\) represents mean;\\(f\\) represents link function (e.g., log logit) \\(f^{-1}\\) represents inverse;\\(\\boldsymbol{X}^{\\mathrm{main}}\\), \\(\\boldsymbol{X}^{\\mathrm{tvc}}\\), \\(\\boldsymbol{X}^{\\mathrm{svc}}\\) represent design matrices (superscript identifiers ‘main’ = main effects, ‘tvc’ = time varying coefficients, ‘svc’ = spatially varying coefficients);\\(\\boldsymbol{\\beta}\\) represents vector fixed-effect coefficients;\\(O_{\\boldsymbol{s},t}\\) represents offset: covariate (usually log transformed) coefficient fixed one;\\(\\alpha_{g}\\) represents random intercepts group \\(g\\), \\(\\alpha_{g}\\sim \\mathrm{N}(0,\\sigma^2_\\alpha)\\);\\(\\gamma_{t}\\) represents time-varying coefficients (random walk), \\(\\gamma_{t} \\sim \\mathrm{N}(\\gamma_{t-1},\\sigma^2_\\gamma)\\);\\(\\zeta_{\\boldsymbol{s}}\\) represents spatially varying coefficients (random field), \\(\\zeta_{\\boldsymbol{s}} \\sim \\mathrm{MVN}(\\boldsymbol{0},\\boldsymbol{\\Sigma}_\\zeta)\\);\\(\\omega_{\\boldsymbol{s}}\\) represents spatial component (random field), \\(\\omega_{\\boldsymbol{s}} \\sim \\mathrm{MVN}(\\boldsymbol{0},\\boldsymbol{\\Sigma}_\\omega)\\); \\(\\epsilon_{\\boldsymbol{s},t}\\) represents spatiotemporal component (random field), \\(\\epsilon_{\\boldsymbol{s},t} \\sim \\mathrm{MVN}(\\boldsymbol{0},\\boldsymbol{\\Sigma}_{\\epsilon})\\).single sdmTMB model rarely, ever, contain components. Next, split model describe various parts detail using ‘\\(\\ldots\\)’ represent optional components.","code":""},{"path":"sdmtmb-model-structure.html","id":"main-effects","chapter":"3 sdmTMB model structure","heading":"3.1 Main effects","text":"\\[\n\\begin{aligned}\n\\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\boldsymbol{X}^{\\mathrm{main}}_{\\boldsymbol{s},t} \\boldsymbol{\\beta} \\ldots \\right)\n\\end{aligned}\n\\]Within sdmTMB(), \\(\\boldsymbol{X}^{\\mathrm{main}}_{\\boldsymbol{s},t} \\boldsymbol{\\beta}\\) defined formula argument represents main-effect model matrix corresponding vector coefficients. main effect formula can contain optional penalized smoothers non-linear functions defined .","code":""},{"path":"sdmtmb-model-structure.html","id":"smoothers","chapter":"3 sdmTMB model structure","heading":"3.1.1 Smoothers","text":"Smoothers sdmTMB implemented formula syntax familiar mgcv (S. N. Wood 2017) users fitting GAMs (generalized additive models).\nSmooths implemented formula using + s(x), implements smooth mgcv::s().\nWithin smooths, syntax commonly used mgcv::s() can applied, e.g. 2-dimensional smooths may constructed + s(x, y); smooths can specific various factor levels, + s(x, = group); smooths can vary according continuous variable, + s(x, = x2); basis function dimensions may specified, e.g. + s(x, k = 4) (see ?mgcv::choose.k); various types splines may constructed cyclic splines model seasonality, e.g. + s(month, bs = \"cc\", k = 12).mgcv can fit unpenalized (e.g., B-splines) penalized splines (P-splines), sdmTMB implements penalized splines.\npenalized splines constructed sdmTMB using function mgcv::smooth2random(), transforms splines random effects (associated design matrices) estimable mixed-effects modelling framework.\napproach implemented R packages gamm4 (S. Wood Scheipl 2020) brms (Bürkner 2017).\n","code":""},{"path":"sdmtmb-model-structure.html","id":"linear-break-point-threshold-models","chapter":"3 sdmTMB model structure","heading":"3.1.2 Linear break-point threshold models","text":"linear break-point “hockey stick” model can used describe threshold asymptotic responses.\nfunction consists two pieces, \\(x < b_{1}\\), \\(s(x) = x \\cdot b_{0}\\), \\(x > b_{1}\\), \\(s(x) = b_{1} \\cdot b_{0}\\).\ncases, \\(b_{0}\\) represents slope function threshold, product \\(b_{1} \\cdot b_{0}\\) represents value asymptote. constraints placed parameters \\(b_{0}\\) \\(b_{1}\\).models can fit including + breakpt(x) model formula, \nx covariate.\nformula can contain single break-point covariate.","code":""},{"path":"sdmtmb-model-structure.html","id":"logistic-threshold-models","chapter":"3 sdmTMB model structure","heading":"3.1.3 Logistic threshold models","text":"Models logistic threshold relationships predictor response can fit form\\[\ns(x)=\\tau + \\psi\\ { \\left[ 1+{ e }^{ -\\ln \\left(19\\right) \\cdot \\left( x-s50 \\right)\n     / \\left(s95 - s50 \\right) } \\right] }^{-1},\n\\]\\(s\\) represents logistic function,\n\\(\\psi\\) scaling parameter (controlling height y-axis response; unconstrained),\n\\(\\tau\\) intercept,\n\\(s50\\) parameter controlling point function reaches 50% maximum (\\(\\psi\\)),\n\\(s95\\) parameter controlling point function reaches 95% maximum.\nparameter \\(s50\\) unconstrained \\(s95\\) constrained larger \\(s50\\).models can fit including + logistic(x) model formula, x covariate.\nformula can contain single logistic covariate.","code":""},{"path":"sdmtmb-model-structure.html","id":"spatial-random-fields","chapter":"3 sdmTMB model structure","heading":"3.2 Spatial random fields","text":"Spatial random fields, \\(\\omega_{\\boldsymbol{s}}\\), included spatial = '' (TRUE) omitted spatial = '' (FALSE).\\[\n\\begin{aligned}\n\\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\omega_{\\boldsymbol{s}} + \\ldots \\right),\\\\\n\\boldsymbol{\\omega} &\\sim \\operatorname{MVNormal} \\left( \\boldsymbol{0}, \\boldsymbol{\\Sigma}_\\omega \\right),\\\\\n\\end{aligned}\n\\]\nmarginal standard deviation \\(\\boldsymbol{\\omega}\\) indicated Spatial SD printed model output sigma_O output sdmTMB::tidy(fit, \"ran_pars\"). ‘O’ ‘omega’ (\\(\\omega\\)).Internally, random fields follow Gaussian Markov random field (GMRF)\\[\n\\boldsymbol{\\omega} \\sim \\mathrm{MVNormal}\\left(\\boldsymbol{0}, \\sigma_\\omega^2 \\boldsymbol{Q}^{-1}_\\omega\\right),\n\\]\n\\(\\boldsymbol{Q}_\\omega\\) sparse precision matrix \\(\\sigma_\\omega^2\\) marginal variance.","code":""},{"path":"sdmtmb-model-structure.html","id":"spatiotemporal-random-fields","chapter":"3 sdmTMB model structure","heading":"3.3 Spatiotemporal random fields","text":"Spatiotemporal random fields included default multiple time elements (time argument NULL) can set IID (independent identically distributed, 'iid'; default), AR(1) ('ar1'), random walk ('rw'), ('') via spatiotemporal argument.\ntext values case insensitive.Spatiotemporal random fields represented \\(\\boldsymbol{\\epsilon}_t\\) within sdmTMB.\nchosen match representation VAST (Thorson 2019).\nmarginal standard deviation \\(\\boldsymbol{\\epsilon}_t\\) indicated Spatiotemporal SD printed model output sigma_E output sdmTMB::tidy(fit, \"ran_pars\").\n‘E’ ‘epsilon’ (\\(\\epsilon\\)).","code":""},{"path":"sdmtmb-model-structure.html","id":"iid-spatiotemporal-random-fields","chapter":"3 sdmTMB model structure","heading":"3.3.1 IID spatiotemporal random fields","text":"IID spatiotemporal random fields (spatiotemporal = 'iid') can represented \\[\n\\begin{aligned}\n\\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\epsilon_{\\boldsymbol{s},t} + \\ldots \\right),\\\\\n\\boldsymbol{\\epsilon_{t}} &\\sim \\operatorname{MVNormal} \\left( \\boldsymbol{0}, \\boldsymbol{\\Sigma}_{\\epsilon} \\right).\n\\end{aligned}\n\\]\\(\\epsilon_{\\boldsymbol{s},t}\\) represent random field deviations point \\(\\boldsymbol{s}\\) time \\(t\\).\nrandom fields assumed independent across time steps.Similarly spatial random fields, spatiotemporal random fields (including versions described ) parameterized internally sparse precision matrix (\\(\\boldsymbol{Q}_\\epsilon\\))\\[\n\\boldsymbol{\\epsilon_{t}} \\sim \\mathrm{MVNormal}\\left(\\boldsymbol{0}, \\sigma_\\epsilon^2 \\boldsymbol{Q}^{-1}_\\epsilon\\right).\n\\]","code":""},{"path":"sdmtmb-model-structure.html","id":"ar1-spatiotemporal-random-fields","chapter":"3 sdmTMB model structure","heading":"3.3.2 AR(1) spatiotemporal random fields","text":"First-order auto regressive, AR(1), spatiotemporal random fields (spatiotemporal = 'ar1') add parameter defining correlation random field deviations one time step next.\ndefined \\[\n\\begin{aligned}\n\\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\delta_{\\boldsymbol{s},t} \\ldots \\right),\\\\\n\\boldsymbol{\\delta}_{t=1} &\\sim \\operatorname{MVNormal} (\\boldsymbol{0}, \\boldsymbol{\\Sigma}_{\\epsilon}),\\\\\n\\boldsymbol{\\delta}_{t>1} &= \\rho \\boldsymbol{\\delta}_{t-1} + \\sqrt{1 - \\rho^2} \\boldsymbol{\\epsilon_{t}},  \\:\n\\boldsymbol{\\epsilon_{t}} \\sim \\operatorname{MVNormal} \\left(\\boldsymbol{0}, \\boldsymbol{\\Sigma}_{\\epsilon} \\right),\n\\end{aligned}\n\\]\n\\(\\rho\\) correlation subsequent spatiotemporal random fields.\n\\(\\rho \\boldsymbol{\\delta}_{t-1} + \\sqrt{1 - \\rho^2}\\) term scales spatiotemporal variance correlation represents steady-state marginal variance.\ncorrelation \\(\\rho\\) allows mean-reverting spatiotemporal fields, constrained \\(-1 < \\rho < 1\\).\nInternally, parameter estimated ar1_phi, unconstrained.\nparameter ar1_phi transformed \\(\\rho\\) \\(\\rho = 2 \\left( \\mathrm{logit}^{-1}(\\texttt{ar1\\_phi}) - 1 \\right)\\).","code":""},{"path":"sdmtmb-model-structure.html","id":"random-walk-spatiotemporal-random-fields-rw","chapter":"3 sdmTMB model structure","heading":"3.3.3 Random walk spatiotemporal random fields (RW)","text":"Random walk spatiotemporal random fields (spatiotemporal = 'rw') represent model difference spatiotemporal deviations one time step next IID. defined \\[\n\\begin{aligned}\n\\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\delta_{\\boldsymbol{s},t} + \\ldots \\right),\\\\\n\\boldsymbol{\\delta}_{t=1} &\\sim \\operatorname{MVNormal} (\\boldsymbol{0}, \\boldsymbol{\\Sigma}_{\\epsilon}),\\\\\n\\boldsymbol{\\delta}_{t>1} &= \\boldsymbol{\\delta}_{t-1} +  \\boldsymbol{\\epsilon_{t-1}},  \\:\n\\boldsymbol{\\epsilon_{t-1}} \\sim \\operatorname{MVNormal} \\left(\\boldsymbol{0}, \\boldsymbol{\\Sigma}_{\\epsilon} \\right),\n\\end{aligned}\n\\]distribution spatiotemporal field initial time step AR(1) model, absence \\(\\rho\\) parameter allows spatiotemporal field non-stationary time.\nNote , contrast AR(1) parametrization, variance longer steady-state marginal variance.","code":""},{"path":"sdmtmb-model-structure.html","id":"time-varying-regression-parameters","chapter":"3 sdmTMB model structure","heading":"3.4 Time-varying regression parameters","text":"Parameters can modelled time varying (random walk) according form\\[\n\\begin{aligned}\n  \\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots +  \\boldsymbol{X}^{\\mathrm{tvc}}_{\\boldsymbol{s},t} \\boldsymbol{\\gamma_{t}} + \\ldots \\right),\\\\\n  \\gamma_{t=1} &\\sim \\operatorname{Uniform} \\left(-\\infty, \\infty \\right),\\\\\n  \\gamma_{t>1} &\\sim \\operatorname{Normal} \\left(\\gamma_{t-1}, \\sigma^2_{\\gamma} \\right),\n\\end{aligned}\n\\]\\(\\boldsymbol{\\gamma_t}\\) optional vector time-varying regression parameters \\(\\boldsymbol{X}^{\\mathrm{tvc}}_{\\boldsymbol{s},t}\\) corresponding model matrix covariate values.\ndefined via time_varying argument, assuming time argument also supplied column name.\nexample, time_varying ~ 0 + x.\nfirst value given implicit uniform prior.\n.e., variable appear fixed effect formula since initial value estimated part time-varying formula.\nformula time_varying = ~ 1 implicitly represents time-varying intercept , case, intercept omitted main effects (formula ~ + 0 + ... formula ~ -1 + ...).","code":""},{"path":"sdmtmb-model-structure.html","id":"spatially-varying-coefficients-svc","chapter":"3 sdmTMB model structure","heading":"3.5 Spatially varying coefficients (SVC)","text":"Spatially varying coefficient models defined \\[\n\\begin{aligned}\n  \\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\boldsymbol{X}^{\\mathrm{svc}}_{\\boldsymbol{s}, t} \\zeta_{\\boldsymbol{s}} + \\ldots \\right),\\\\\n  \\boldsymbol{\\zeta} &\\sim \\operatorname{MVNormal} \\left( \\boldsymbol{0}, \\boldsymbol{\\Sigma}_\\zeta \\right),\n\\end{aligned}\n\\]\\(\\boldsymbol{\\zeta}\\) random field representing spatially varying coefficient.\nUsually, \\(\\boldsymbol{X}^{\\mathrm{svc}}_{\\boldsymbol{s}, t}\\) represent prediction matrix constant spatially given time \\(t\\) defined one-sided formula supplied spatial_varying.\nexample spatial_varying = ~ 0 + x, 0 omits intercept.random fields parameterized internally sparse precision matrix (\\(\\boldsymbol{Q}_\\zeta\\))\\[\n\\boldsymbol{\\zeta} \\sim \\mathrm{MVNormal}\\left(\\boldsymbol{0}, \\sigma_\\zeta^2 \\boldsymbol{Q}^{-1}_\\zeta\\right).\n\\]","code":""},{"path":"sdmtmb-model-structure.html","id":"iid-random-or-multi-level-intercepts","chapter":"3 sdmTMB model structure","heading":"3.6 IID random or multi-level intercepts","text":"Multilevel/hierchical intercepts defined \\[\n\\begin{aligned}\n  \\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + \\alpha_{g} + \\ldots \\right),\\\\\n  \\alpha_g &\\sim \\operatorname{Normal} \\left(0, \\sigma_\\alpha^2 \\right),\\\\\n\\end{aligned}\n\\]\\(\\alpha_g\\) example optional “random” intercept—intercept\nmean zero varies level \\(g\\) constrained \\(\\sigma_\\alpha\\).\ndefined formula argument via (1 | g) syntax lme4 glmmTMB.\ncan multiple random intercepts, despite showing one .\nE.g., (1 | g1) + (1 | g2), case assumed independent uncorrelated .","code":""},{"path":"sdmtmb-model-structure.html","id":"offset-terms","chapter":"3 sdmTMB model structure","heading":"3.7 Offset terms","text":"Offset terms can included offset argument sdmTMB().\nincluded linear predictor \\[\n\\begin{aligned}\n  \\mu_{\\boldsymbol{s},t} &= f^{-1} \\left( \\ldots + O_{\\boldsymbol{s},t} + \\ldots \\right),\n\\end{aligned}\n\\]\\(O_{\\boldsymbol{s},t}\\) offset term—log transformed variable without coefficient (assuming log link).\noffset included prediction.\nTherefore, offset represents measure effort, example, prediction one unit effort (log(1) = 0).","code":""},{"path":"gaussian-random-fields.html","id":"gaussian-random-fields","chapter":"4 Gaussian random fields","heading":"4 Gaussian random fields","text":"","code":""},{"path":"gaussian-random-fields.html","id":"matérn-parameterization","chapter":"4 Gaussian random fields","heading":"4.1 Matérn parameterization","text":"Matérn defines covariance \\(\\Phi \\left( s_j, s_k \\right)\\) spatial locations \\(s_j\\) \\(s_k\\) \\[\n\\Phi\\left( s_j,s_k \\right) = \\tau^2/\\Gamma(\\nu)2^{\\nu - 1} (\\kappa d_{jk})^\\nu K_\\nu \\left( \\kappa d_{jk} \\right),\n\\]\n\\(\\tau^2\\) controls spatial variance,\n\\(\\nu\\) controls smoothness,\n\\(\\Gamma\\) represents Gamma function,\n\\(d_{jk}\\) represents distance locations \\(s_j\\) \\(s_k\\),\n\\(K_\\nu\\) represents modified Bessel function second kind,\n\\(\\kappa\\) represents decorrelation rate.\nparameter \\(\\nu\\) set 1 take advantage Stochastic Partial Differential Equation (SPDE) approximation GRF greatly increase computational efficiency (Lindgren, Rue, Lindström 2011).\nInternally, parameters \\(\\kappa\\) \\(\\tau\\) converted range marginal standard deviation \\(\\sigma\\) \\(\\textrm{range} = \\sqrt{8} / \\kappa\\) \\(\\sigma = 1 / \\sqrt{4 \\pi \\exp \\left(2 \\log(\\tau) + 2 \\log(\\kappa) \\right) }\\).case spatiotemporal model spatial spatiotemporal fields, share_range = TRUE sdmTMB() (default), single \\(\\kappa\\) range estimated separate \\(\\sigma_\\omega\\) \\(\\sigma_\\epsilon\\). often makes sense since data often weakly informative \\(\\kappa\\).\nshare_range = FALSE, separate \\(\\kappa_\\omega\\) \\(\\kappa_\\epsilon\\) estimated.\nspatially varying coefficient field always shares \\(\\kappa\\) spatial random field.","code":""},{"path":"gaussian-random-fields.html","id":"projection-boldsymbola-matrix","chapter":"4 Gaussian random fields","heading":"4.2 Projection \\(\\boldsymbol{A}\\) matrix","text":"values spatial variables knots multiplied projection matrix \\(\\boldsymbol{}\\) bilinearly interpolates knot locations values locations observed predicted data (Lindgren Rue 2015)\\[\n\\boldsymbol{\\omega}^* = \\boldsymbol{} \\boldsymbol{\\omega},\n\\]\n\\(\\boldsymbol{\\omega}^*\\) represents values spatial random fields observed locations predicted data locations.\nmatrix \\(\\boldsymbol{}\\) row data point prediction point column knot.\nThree non-zero elements row define weight neighbouring 3 knot locations location \\(\\boldsymbol{s}\\).\nbilinear interpolation happens spatiotemporal random fields\\[\n\\boldsymbol{\\epsilon}_t^* = \\boldsymbol{} \\boldsymbol{\\epsilon}_t.\n\\]","code":""},{"path":"gaussian-random-fields.html","id":"anisotropy","chapter":"4 Gaussian random fields","heading":"4.3 Anisotropy","text":"TMB allows anisotropy, spatial covariance may asymmetric respect latitude longitude (full details). Anisotropy can turned logical anisotropy argument sdmTMB(). number ways implement anisotropic covariance (Fuglstad et al. 2015), adopt 2-parameter rotation matrix \\(\\textbf{H}\\). elements \\(\\textbf{H}\\) defined parameter vector \\(\\boldsymbol{x}\\) \\(H_{1,1} = x_{1}\\), \\(H_{1,2} = H_{2,1} = x_{2}\\) \\(H_{2,2} = (1 + x_{2}^2) / x_{1}\\).model fitted sdmTMB(), anisotropy relationships may plotted using plot_anisotropy() function, takes fitted object argument. barrier mesh used, anisotropy disabled.","code":""},{"path":"gaussian-random-fields.html","id":"incorporating-physical-barriers-into-the-spde","chapter":"4 Gaussian random fields","heading":"4.4 Incorporating physical barriers into the SPDE","text":"cases spatial domain interest may complex bounded barrier land water (e.g., coastlines, islands, lakes).\nSPDE models allow physical barriers incorporated modelling (Bakka et al. 2019).\nsdmTMB() models, mesh construction occurs two steps: user (1) constructs mesh call sdmTMB::make_mesh(), (2) passes mesh sdmTMB::add_barrier_mesh().\nbarriers must constructed sf objects (Pebesma 2018) polygons defining barriers.\nSee ?sdmTMB::add_barrier_mesh example.barrier implementation requires user select fraction value (range_fraction argument) defines fraction usual spatial range crossing barrier (Bakka et al. 2019).\nexample, range estimated 10 km, range_fraction = 0.2 assume range 2 km across barrier.\nlet spatial correlation decay 5 times faster distance.\nexperimentation, values around 0.1 0.2 seem work well values much lower 0.1 can result convergence issues.website Francesco Serafini Haakon Bakka provides illustration INLA.\nimplementation within TMB borrowed code written Olav Nikolai Breivik Hans Skaug TMB Case Studies Github site.","code":""},{"path":"observation-model-families.html","id":"observation-model-families","chapter":"5 Observation model families","heading":"5 Observation model families","text":"describe main observation families available sdmTMB comment parametrization, statistical properties, utility, code representation sdmTMB.","code":""},{"path":"observation-model-families.html","id":"binomial","chapter":"5 Observation model families","heading":"5.1 Binomial","text":"\\[\n\\operatorname{Binomial} \\left(N, \\mu \\right)\n\\]\n\\(N\\) size number trials, \\(\\mu\\) probability success trial.\n\\(N = 1\\), distribution becomes Bernoulli distribution.\nInternally, distribution parameterized robust\nversion TMB, numerically stable probabilities approach 0 1.\nFollowing structure stats::glm(), lme4, glmmTMB, binomial family can specified one 4 ways:response may factor (model classifies first level versus others)response may binomial (0/1)response can matrix form cbind(success, failure), orthe response may observed proportions, weights argument used specify Binomial size (\\(N\\)) parameter (probabilty ~ ..., weights = N).Code defined within TMB.Example: family = binomial(link = \"logit\")","code":""},{"path":"observation-model-families.html","id":"beta","chapter":"5 Observation model families","heading":"5.2 Beta","text":"\\[\n\\operatorname{Beta} \\left(\\mu \\phi, (1 - \\mu) \\phi \\right)\n\\]\n\\(\\mu\\) mean \\(\\phi\\) precision parameter.\nparametrization follows Ferrari Cribari-Neto (2004) betareg R package (Cribari-Neto Zeileis 2010).\nvariance \\(\\mu (1 - \\mu) / (\\phi + 1)\\).Code defined within TMB.Example: family = Beta(link = \"logit\")","code":""},{"path":"observation-model-families.html","id":"gamma","chapter":"5 Observation model families","heading":"5.3 Gamma","text":"\\[\n\\operatorname{Gamma} \\left( \\phi, \\frac{\\mu}{\\phi}  \\right)\n\\]\n\\(\\phi\\) represents Gamma shape \\(\\mu / \\phi\\) represents scale.\nmean \\(\\mu\\) variance \\(\\mu \\cdot \\phi^2\\).Code defined within TMB.Example: family = Gamma(link = \"log\")","code":""},{"path":"observation-model-families.html","id":"gaussian","chapter":"5 Observation model families","heading":"5.4 Gaussian","text":"\\[\n\\operatorname{Normal} \\left( \\mu, \\phi^2 \\right)\n\\]\n\\(\\mu\\) mean \\(\\phi\\) standard deviation.\nvariance \\(\\phi^2\\).Example: family = Gaussian(link = \"identity\")Code defined within TMB.","code":""},{"path":"observation-model-families.html","id":"lognormal","chapter":"5 Observation model families","heading":"5.5 Lognormal","text":"sdmTMB uses bias-corrected lognormal distribution \\(\\phi\\) represents standard deviation log-space:\\[\n\\operatorname{Lognormal} \\left( \\log \\mu - \\frac{\\phi^2}{2}, \\phi^2 \\right).\n\\]\nbias correction, \\(\\mathbb{E}[y] = \\mu\\) \\(\\mathrm{Var}[\\log y] = \\phi^2\\).Code defined within sdmTMB based TMB dnorm() normal density.Example: family = lognormal(link = \"log\")","code":""},{"path":"observation-model-families.html","id":"negative-binomial-1-nb1","chapter":"5 Observation model families","heading":"5.6 Negative Binomial 1 (NB1)","text":"\\[\n\\operatorname{NB1} \\left( \\mu, \\phi \\right)\n\\]\\(\\mu\\) mean \\(\\phi\\) dispersion parameter.\nvariance scales linearly mean \\(\\mathrm{Var}[y] = \\mu + \\mu / \\phi\\) (Hilbe 2011).\nInternally, distribution parameterized robust version TMB.Code defined within sdmTMB based NB2 borrowed glmmTMB.Example: family = nbinom1(link = \"log\")","code":""},{"path":"observation-model-families.html","id":"negative-binomial-2-nb2","chapter":"5 Observation model families","heading":"5.7 Negative Binomial 2 (NB2)","text":"\\[\n\\operatorname{NB2} \\left( \\mu, \\phi \\right)\n\\]\\(\\mu\\) mean \\(\\phi\\) dispersion parameter.\nvariance scales quadratically mean \\(\\mathrm{Var}[y] = \\mu + \\mu^2 / \\phi\\) (Hilbe 2011).\nNB2 parametrization commonly seen ecology NB1.\nInternally, distribution parameterized robust version TMB.Code defined within TMB.Example: family = nbinom2(link = \"log\")","code":""},{"path":"observation-model-families.html","id":"poisson","chapter":"5 Observation model families","heading":"5.8 Poisson","text":"\\[\n\\operatorname{Poisson} \\left( \\mu \\right)\n\\]\n\\(\\mu\\) represents mean \\(\\mathrm{Var}[y] = \\mu\\).Code defined within TMB.Example: family = poisson(link = \"log\")","code":""},{"path":"observation-model-families.html","id":"student-t","chapter":"5 Observation model families","heading":"5.9 Student-t","text":"\\[\n\\operatorname{Student-t} \\left( \\mu, \\phi, \\nu \\right)\n\\]\\(\\nu\\), degrees freedom (df), user-supplied fixed parameter. Lower values \\(\\nu\\) result heavier tails compared Gaussian distribution. approximately df = 20, distribution becomes similar Gaussian. Student-t distribution low degrees freedom (e.g., \\(\\nu \\le 7\\)) can helpful modelling data otherwise suitable Gaussian needs approach robust outliers (e.g., Anderson et al. 2017).Code defined within sdmTMB based dt() distribution TMB.Example: family = student(link = \"log\", df = 7)","code":""},{"path":"observation-model-families.html","id":"tweedie","chapter":"5 Observation model families","heading":"5.10 Tweedie","text":"\\[\n\\operatorname{Tweedie} \\left(\\mu, p, \\phi \\right), \\: 1 < p < 2\n\\]\\(\\mu\\) mean, \\(p\\) power parameter constrained 1 2, \\(\\phi\\) dispersion parameter.\nTweedie distribution can helpful modelling data positive continuous also contain zeros.Internally, \\(p\\) transformed \\(\\mathrm{logit}^{-1} (\\texttt{thetaf}) + 1\\) constrain 1 2 estimated unconstrained variable.source code implemented cplm package (Zhang 2013) based Dunn Smyth (2005). TMB version defined .Example: family = tweedie(link = \"log\")","code":""},{"path":"optimization.html","id":"optimization","chapter":"6 Optimization","heading":"6 Optimization","text":"","code":""},{"path":"optimization.html","id":"optimization-details","chapter":"6 Optimization","heading":"6.1 Optimization details","text":"sdmTMB model fit maximum marginal likelihood.\nInternally, TMB (Kristensen et al. 2016) model template calculates marginal log likelihood gradient, negative log likelihood minimized via non-linear optimization routine stats::nlminb() R (Gay 1990; R Core Team 2021).\nRandom effects estimated values maximize log likelihood conditional estimated fixed effects integrated via Laplace approximation (Kristensen et al. 2016).Like AD Model Builder (Fournier et al. 2012), TMB allows parameters fit phases include multiphase argument sdmTMB::sdmTMBcontrol() allow .\nhigh-dimensional models (many fixed random effects), phased estimation may faster result stable convergence.\nsdmTMB, phased estimation proceeds first estimating fixed-effect parameters contributing likelihood (holding random effects constant initial values).\nsecond phase, random-effect parameters (variances) also estimated.\nFixed-effect parameters also estimated second phase initialized estimates first phase.cases, single call stats::nlminb() may result convergence (e.g., maximum gradient marginal likelihood respect fixed-effect parameters small enough yet), algorithm may need run multiple times.\nsdmTMB::sdmTMBcontrol() function, include argument nlminb_loops restart optimization previous best values.\nnumber nlminb_loops generally small (e.g., 2 3 initially), defaults 1.\nsdmTMB models, Hessian may also unstable need re-evaluated.\noptionally stats::optimHess() routine call stats::nlminb().\nstats::optimHess() function implements Newton optimization routine find Hessian, include argument newton_loops sdmTMB::sdmTMBcontrol() allow multiple function evaluations (starting previous best value).\ndefault, included newton_loops set 0.\nmodel already fit, function sdmTMB::run_extra_optimization() can run additional optimization loops either routine reduce maximum gradient.","code":""},{"path":"optimization.html","id":"assessing-convergence","chapter":"6 Optimization","heading":"6.2 Assessing convergence","text":"Much guidance around diagnostics glmmTMB also applies sdmTMB, e.g. glmmTMB vignette troubleshooting.\nOptimization stats::nlminb() involves specifying number iterations evaluations (eval.max iter.max) tolerances (abs.tol, rel.tol, x.tol, xf.tol)—greater number iterations smaller tolerance thresholds increase chance optimal solution found, evaluations translates longer computation time.\nWarnings non-positive-definite Hessian matrices (accompanied parameters NAs standard errors) often mean models improperly specified given data.\nStandard errors can observed output print.sdmTMB() checking fit$sd_report.\nmaximum gradient marginal likelihood respect fixed-effect parameters can checked inspecting (fit$gradients).\nGuidance varies, maximum gradient likely least \\(< 0.001\\) assuming fitting routine consistent convergence.\nmaximum gradients already relatively small, can often reduced additional optimization calls beginning previous best parameter vector described sdmTMB::run_extra_optimization().","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
